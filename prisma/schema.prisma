generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Proveedor {
  id        Int        @id @default(autoincrement())
  nombre    String
  telefono  String?
  email     String?
  direccion String?
  productos Producto[]
  compras   Compra[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Categoria {
  id        Int        @id @default(autoincrement())
  nombre    String
  productos Producto[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Producto {
  id          Int        @id @default(autoincrement())
  codigo      String     @unique
  descripcion String
  costo       Float
  margen      Float
  precioVenta Float
  proveedorId Int
  categoriaId Int
  proveedor   Proveedor  @relation(fields: [proveedorId], references: [id])
  categoria   Categoria  @relation(fields: [categoriaId], references: [id])
  variantes   Variante[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Variante {
  id           Int               @id @default(autoincrement())
  productoId   Int
  talle        String
  color        String
  stock        Int               @default(0)
  codBarra     String            @unique
  producto     Producto          @relation(fields: [productoId], references: [id])
  detalles     DetalleCompra[]
  movimientos  MovimientoStock[]
  VentaDetalle VentaDetalle[]
}

model Contador {
  id        Int      @id @default(autoincrement())
  nombre    String   @unique
  valor     Int
  updatedAt DateTime @updatedAt
}

enum TipoMovimiento {
  INGRESO
  EGRESO
  AJUSTE
  CAMBIO
  COMPRA
  VENTA
}

model MovimientoStock {
  id          Int            @id @default(autoincrement())
  fecha       DateTime       @default(now())
  tipo        TipoMovimiento
  cantidad    Int
  comprobante String
  costo       Float?
  observacion String?
  varianteId  Int
  variante    Variante       @relation(fields: [varianteId], references: [id])
  usuarioId   Int?
}

model Compra {
  id             Int             @id @default(autoincrement())
  nroComprobante String          @unique @default("TEMP")
  proveedor      Proveedor       @relation(fields: [proveedorId], references: [id])
  proveedorId    Int
  fecha          DateTime        @default(now())
  total          Float
  detalles       DetalleCompra[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model DetalleCompra {
  id         Int      @id @default(autoincrement())
  compra     Compra   @relation(fields: [compraId], references: [id])
  compraId   Int
  variante   Variante @relation(fields: [varianteId], references: [id])
  varianteId Int
  cantidad   Int
  costo      Float
  subtotal   Float    @default(0)
}

model Cliente {
  id        Int       @id @default(autoincrement())
  nombre    String
  apellido  String
  dni       String?   @unique
  telefono  String?
  email     String?
  fechaNac  DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  ventas Venta[]
}

model Venta {
  id             Int              @id @default(autoincrement())
  nroComprobante String           @unique
  fecha          DateTime         @default(now())
  subtotal       Float
  descuento      Float            @default(0)
  total          Float
  cliente        Cliente?         @relation(fields: [clienteId], references: [id])
  clienteId      Int?
  detalles       VentaDetalle[]
  pagos          VentaMedioPago[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

model VentaDetalle {
  id         Int      @id @default(autoincrement())
  venta      Venta    @relation(fields: [ventaId], references: [id])
  ventaId    Int
  variante   Variante @relation(fields: [varianteId], references: [id])
  varianteId Int
  cantidad   Int
  precio     Float
}

model MedioPago {
  id     Int              @id @default(autoincrement())
  nombre String           @unique
  ventas VentaMedioPago[]
}

model VentaMedioPago {
  id          Int       @id @default(autoincrement())
  venta       Venta     @relation(fields: [ventaId], references: [id])
  ventaId     Int
  medioPago   MedioPago @relation(fields: [medioPagoId], references: [id])
  medioPagoId Int
  monto       Float
}
